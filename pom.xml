<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>delta-lineage</groupId>
  <artifactId>lineage</artifactId>
  <version>0.1</version>
  <packaging>jar</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <scala.version>2.12.11</scala.version>
    <scala.main.version>2.12</scala.main.version>
    <spark.version>3.0.0</spark.version>
    <scalatest.version>3.0.8</scalatest.version>
  </properties>

  <!-- Please make sure that following dependencies have versions corresponding to the ones in your cluster.  -->
  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
      <scope>${scala.scope}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_${scala.main.version}</artifactId>
      <version>${spark.version}</version>
      <scope>${spark.scope}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_${scala.main.version}</artifactId>
      <version>${spark.version}</version>
      <scope>${spark.scope}</scope>
    </dependency>
    <dependency>
      <groupId>io.delta</groupId>
      <artifactId>delta-core_${scala.main.version}</artifactId>
      <version>0.7.0</version>
      <scope>${spark.scope}</scope>
    </dependency>

    <!-- Test Dependencies -->
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.main.version}</artifactId>
      <version>${scalatest.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>4.3.0</version>
        <executions>
          <execution>
            <phase>process-sources</phase>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
            <configuration>
              <!-- <mainSourceDir>${project.build.sourceDirectory}/../scala</mainSourceDir> -->
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.2.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Instructions from http://www.scalatest.org/user_guide/using_the_scalatest_maven_plugin -->
      <!-- disable surefire -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.7</version>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>
      <!-- enable scalatest -->
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <version>1.0</version>
        <configuration>
          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
          <junitxml>.</junitxml>
          <filereports>WDF TestSuite.txt</filereports>
        </configuration>
        <executions>
          <execution>
            <id>test</id>
            <goals>
                <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>package</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <spark.scope>provided</spark.scope>
          <scala.scope>provided</scala.scope>
      </properties>
    </profile>
      <profile>
          <id>dev</id>
          <properties>
              <spark.scope>compile</spark.scope>
              <scala.scope>compile</scala.scope>
          </properties>
      </profile>
  </profiles>

</project>
